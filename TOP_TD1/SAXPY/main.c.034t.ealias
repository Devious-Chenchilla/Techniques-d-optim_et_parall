
;; Function saxpy (saxpy, funcdef_no=22, decl_uid=3423, cgraph_uid=23, symbol_order=22)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
res = &NONLOCAL
x = &NONLOCAL
y = &NONLOCAL
a = &NONLOCAL
size = &NONLOCAL
_1 = i_14
_2 = _1 + UNKNOWN
_2 = &NONLOCAL
_3 = x + UNKNOWN
_4 = *_3
_5 = _4 + UNKNOWN
_5 = a + UNKNOWN
_6 = i_14
_7 = _6 + UNKNOWN
_7 = &NONLOCAL
_8 = y + UNKNOWN
_9 = *_8
_10 = i_14
_11 = _10 + UNKNOWN
_11 = &NONLOCAL
_12 = res + UNKNOWN
_13 = _5 + UNKNOWN
_13 = _9 + UNKNOWN
*_12 = _13
i_24 = i_14 + UNKNOWN
i_24 = &NONLOCAL
i_14 = &NULL
i_14 = i_24

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
res = { NONLOCAL }
x = { NONLOCAL } same as res
y = { NONLOCAL } same as res
a = { NONLOCAL } same as res
size = { NONLOCAL } same as res
_1 = { NULL NONLOCAL }
i_14 = { NULL NONLOCAL } same as _1
_2 = { NULL NONLOCAL }
_3 = { NONLOCAL }
_4 = { ESCAPED NONLOCAL }
_5 = { ESCAPED NONLOCAL }
_6 = { NULL NONLOCAL } same as _1
_7 = { NULL NONLOCAL }
_8 = { NONLOCAL }
_9 = { ESCAPED NONLOCAL }
_10 = { NULL NONLOCAL } same as _1
_11 = { NULL NONLOCAL }
_12 = { NONLOCAL }
_13 = { ESCAPED NONLOCAL }
i_24 = { NULL NONLOCAL }


Alias information for saxpy

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { }

Flow-insensitive points-to information

_3, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
_12, points-to non-local, points-to NULL, points-to vars: { }
x_19(D), points-to non-local, points-to NULL, points-to vars: { }
y_21(D), points-to non-local, points-to NULL, points-to vars: { }
res_22(D), points-to non-local, points-to NULL, points-to vars: { }

saxpy (int * res, int * x, int * y, int a, int size)
{
  int i;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  int * _8;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  int * _12;
  int _13;

  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long unsigned int) i_14;
  _2 = _1 * 4;
  _3 = x_19(D) + _2;
  _4 = *_3;
  _5 = _4 * a_20(D);
  _6 = (long unsigned int) i_14;
  _7 = _6 * 4;
  _8 = y_21(D) + _7;
  _9 = *_8;
  _10 = (long unsigned int) i_14;
  _11 = _10 * 4;
  _12 = res_22(D) + _11;
  _13 = _5 + _9;
  *_12 = _13;
  i_24 = i_14 + 1;

  <bb 4> :
  # i_14 = PHI <0(2), i_24(3)>
  if (i_14 < size_18(D))
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function main (main, funcdef_no=23, decl_uid=3431, cgraph_uid=24, symbol_order=23)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
argc = &NONLOCAL
argv = &NONLOCAL
ESCAPED = &NONLOCAL
res_29 = &HEAP(12)
ESCAPED = &NONLOCAL
x_31 = &HEAP(14)
ESCAPED = &NONLOCAL
y_33 = &HEAP(16)
_7 = i_20
_8 = _7 + UNKNOWN
_8 = &NONLOCAL
_9 = x_31 + UNKNOWN
_10 = i_20 + UNKNOWN
_10 = &NONLOCAL
*_9 = _10
_11 = i_20
_12 = _11 + UNKNOWN
_12 = &NONLOCAL
_13 = y_33 + UNKNOWN
*_13 = i_20
i_43 = i_20 + UNKNOWN
i_43 = &NONLOCAL
i_20 = &NULL
i_20 = i_43
_45 = i_44
_46 = _45 + UNKNOWN
_46 = &NONLOCAL
_47 = x_31 + UNKNOWN
_48 = *_47
_49 = _48 + UNKNOWN
_49 = &NONLOCAL
_50 = y_33 + UNKNOWN
_51 = *_50
_52 = res_29 + UNKNOWN
_53 = _49 + UNKNOWN
_53 = _51 + UNKNOWN
*_52 = _53
i_54 = i_44 + UNKNOWN
i_54 = &NONLOCAL
i_44 = &NULL
i_44 = i_54
_14 = i_21
_15 = _14 + UNKNOWN
_15 = &NONLOCAL
_16 = res_29 + UNKNOWN
_17 = *_16
ESCAPED = &STRING
ESCAPED = i_21
ESCAPED = _17
_18 = i_21 + UNKNOWN
_18 = &NONLOCAL
_19 = _18 + UNKNOWN
ESCAPED = &NONLOCAL
i_40 = i_21 + UNKNOWN
i_40 = &NONLOCAL
i_21 = &NULL
i_21 = i_40

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
argc = { NONLOCAL }
argv = { NONLOCAL } same as argc
malloc = { }
HEAP(12) = { NULL NONLOCAL }
HEAP(14) = { NULL NONLOCAL }
HEAP(16) = { NULL NONLOCAL }
printf = { }
putchar = { }
main = { }
res_29 = { HEAP(12) }
x_31 = { HEAP(14) }
y_33 = { HEAP(16) }
_7 = { NULL NONLOCAL }
i_20 = { NULL NONLOCAL } same as _7
_8 = { NULL NONLOCAL }
_9 = { HEAP(14) }
_10 = { NULL NONLOCAL }
_11 = { NULL NONLOCAL } same as _7
_12 = { NULL NONLOCAL }
_13 = { HEAP(16) }
i_43 = { NULL NONLOCAL }
_45 = { NULL NONLOCAL }
i_44 = { NULL NONLOCAL } same as _45
_46 = { NULL NONLOCAL }
_47 = { HEAP(14) }
_48 = { NULL NONLOCAL }
_49 = { NULL NONLOCAL }
_50 = { HEAP(16) }
_51 = { NULL NONLOCAL }
_52 = { HEAP(12) }
_53 = { NULL NONLOCAL }
i_54 = { NULL NONLOCAL }
_14 = { NULL NONLOCAL }
i_21 = { NULL NONLOCAL } same as _14
_15 = { NULL NONLOCAL }
_16 = { HEAP(12) }
_17 = { NULL NONLOCAL }
_18 = { NULL NONLOCAL }
_19 = { NULL NONLOCAL }
i_40 = { NULL NONLOCAL }


Alias information for main

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_9, points-to NULL, points-to vars: { D.3460 }
_13, points-to NULL, points-to vars: { D.3461 }
_16, points-to NULL, points-to vars: { D.3459 }
res_29, points-to NULL, points-to vars: { D.3459 }
x_31, points-to NULL, points-to vars: { D.3460 }
y_33, points-to NULL, points-to vars: { D.3461 }
_47, points-to NULL, points-to vars: { D.3460 }
_50, points-to NULL, points-to vars: { D.3461 }
_52, points-to NULL, points-to vars: { D.3459 }

main (int argc, char * * argv)
{
  int i;
  int a;
  int * y;
  int * x;
  int * res;
  int size;
  int i;
  long unsigned int _7;
  long unsigned int _8;
  int * _9;
  int _10;
  long unsigned int _11;
  long unsigned int _12;
  int * _13;
  long unsigned int _14;
  long unsigned int _15;
  int * _16;
  int _17;
  int _18;
  int _19;
  long unsigned int _45;
  long unsigned int _46;
  int * _47;
  int _48;
  int _49;
  int * _50;
  int _51;
  int * _52;
  int _53;

  <bb 2> :
  res_29 = malloc (400);
  x_31 = malloc (400);
  y_33 = malloc (400);
  goto <bb 4>; [INV]

  <bb 3> :
  _7 = (long unsigned int) i_20;
  _8 = _7 * 4;
  _9 = x_31 + _8;
  _10 = i_20 + 50;
  *_9 = _10;
  _11 = (long unsigned int) i_20;
  _12 = _11 * 4;
  _13 = y_33 + _12;
  *_13 = i_20;
  i_43 = i_20 + 1;

  <bb 4> :
  # i_20 = PHI <0(2), i_43(3)>
  if (i_20 <= 99)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _45 = (long unsigned int) i_44;
  _46 = _45 * 4;
  _47 = x_31 + _46;
  _48 = *_47;
  _49 = _48 * 2;
  _50 = y_33 + _46;
  _51 = *_50;
  _52 = res_29 + _46;
  _53 = _49 + _51;
  *_52 = _53;
  i_54 = i_44 + 1;

  <bb 6> :
  # i_44 = PHI <0(4), i_54(5)>
  if (i_44 <= 99)
    goto <bb 5>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 7> :
  _14 = (long unsigned int) i_21;
  _15 = _14 * 4;
  _16 = res_29 + _15;
  _17 = *_16;
  printf ("res[%d] = %d ; ", i_21, _17);
  _18 = i_21 + 1;
  _19 = _18 % 10;
  if (_19 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  __builtin_putchar (10);

  <bb 9> :
  i_40 = i_21 + 1;

  <bb 10> :
  # i_21 = PHI <0(6), i_40(9)>
  if (i_21 <= 99)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  return 1;

}


