
;; Function saxpy (saxpy, funcdef_no=22, decl_uid=3423, cgraph_uid=23, symbol_order=22)

Not peeling: upper bound is known so can unroll completely
Not peeling: upper bound is known so can unroll completely

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_1 -> { .MEM_96 }
_2 -> { _97 }
_3 -> { _98 }
_4 -> { _99 }
_5 -> { _100 }
_6 -> { _101 }
_7 -> { _102 }
_8 -> { _103 }
_9 -> { _104 }
_19 -> { _105 }
i_22 -> { i_95 }
i_52 -> { i_107 }
.MEM_54 -> { .MEM_106 }
i_56 -> { i_107 }
i_57 -> { i_95 }
.MEM_58 -> { .MEM_96 }
_59 -> { _97 }
_60 -> { _98 }
_61 -> { _99 }
_62 -> { _100 }
_63 -> { _101 }
_64 -> { _102 }
_66 -> { _103 }
_67 -> { _104 }
.MEM_92 -> { .MEM_106 }
_108 -> { _105 }
Incremental SSA update started at block: 20
Number of blocks in CFG: 38
Number of blocks to update: 6 ( 16%)


Removing basic block 19
Removing basic block 28
Removing basic block 36
Removing basic block 37
Merging blocks 24 and 18
Merging blocks 29 and 32
Removing basic block 33
Removing basic block 35
Merging blocks 24 and 26
Not peeling: upper bound is known so can unroll completely
Not peeling: upper bound is known so can unroll completely
saxpy (int * res, int * x, int * y, int a, int size)
{
  vector(4) int * vectp_res.32;
  vector(4) int * vectp_res.31;
  vector(4) int vect__64.30;
  vector(4) int vect__62.29;
  vector(4) int * vectp_y.28;
  vector(4) int * vectp_y.27;
  vector(4) int vect__60.26;
  vector(4) int vect__59.25;
  vector(4) int * vectp_x.24;
  vector(4) int * vectp_x.23;
  int tmp.22;
  unsigned int niters_vector_mult_vf.21;
  unsigned int bnd.20;
  unsigned int niters.19;
  vector(8) int * vectp_res.18;
  vector(8) int * vectp_res.17;
  vector(8) int vect__9.16;
  vector(8) int vect__7.15;
  vector(8) int * vectp_y.14;
  vector(8) int * vectp_y.13;
  vector(8) int vect__5.12;
  vector(8) int vect__4.11;
  vector(8) int * vectp_x.10;
  vector(8) int * vectp_x.9;
  int tmp.8;
  unsigned int niters_vector_mult_vf.7;
  unsigned int bnd.6;
  unsigned int niters.5;
  int i;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int _5;
  int _6;
  int * _7;
  int _8;
  int * _9;
  _Bool _10;
  sizetype _11;
  int _19;
  ssizetype _20;
  int * _21;
  _Bool _25;
  unsigned int _26;
  unsigned int _27;
  int * _31;
  ssizetype _32;
  _Bool _33;
  _Bool _34;
  sizetype _35;
  _Bool _36;
  long unsigned int _41;
  long unsigned int _42;
  int * _43;
  int _44;
  int _45;
  int * _46;
  int _47;
  int * _48;
  int _49;
  long unsigned int _59;
  long unsigned int _60;
  int * _61;
  int _62;
  int _63;
  int * _64;
  int _66;
  int * _67;
  unsigned int _68;
  unsigned int _69;
  unsigned int _76;
  unsigned int _77;
  vector(8) int vect_cst__81;
  unsigned int ivtmp_90;
  unsigned int ivtmp_91;
  unsigned int _94;
  long unsigned int _97;
  long unsigned int _98;
  int * _99;
  int _100;
  int _101;
  int * _102;
  int _103;
  int * _104;
  int _105;
  int _108;
  unsigned int _109;
  unsigned int _110;
  unsigned int _111;
  int _117;
  sizetype _120;
  sizetype _121;
  vector(4) int vect_cst__125;
  sizetype _128;
  sizetype _129;
  sizetype _135;
  sizetype _136;
  unsigned int ivtmp_141;

  <bb 2> [local count: 118111600]:
  if (size_13(D) > 0)
    goto <bb 11>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 11> [local count: 105119324]:
  _27 = (unsigned int) size_13(D);
  _26 = _27 + 4294967295;
  _25 = _26 > 2;
  _21 = x_14(D) + 4;
  _20 = res_17(D) - _21;
  _11 = (sizetype) _20;
  _10 = _11 > 24;
  _36 = _10 & _25;
  _31 = y_16(D) + 4;
  _32 = res_17(D) - _31;
  _35 = (sizetype) _32;
  _34 = _35 > 24;
  _33 = _34 & _36;
  if (_33 != 0)
    goto <bb 12>; [80.00%]
  else
    goto <bb 13>; [20.00%]

  <bb 12> [local count: 84095460]:
  niters.5_53 = (unsigned int) size_13(D);
  _68 = (unsigned int) size_13(D);
  _69 = _68 + 4294967295;
  if (_69 <= 6)
    goto <bb 20>; [10.00%]
  else
    goto <bb 15>; [90.00%]

  <bb 15> [local count: 75685914]:
  bnd.6_72 = niters.5_53 >> 3;
  vect_cst__81 = {a_15(D), a_15(D), a_15(D), a_15(D), a_15(D), a_15(D), a_15(D), a_15(D)};

  <bb 3> [local count: 454115482]:
  # vectp_x.9_78 = PHI <vectp_x.9_79(6), x_14(D)(15)>
  # vectp_y.13_83 = PHI <vectp_y.13_84(6), y_16(D)(15)>
  # vectp_res.17_87 = PHI <vectp_res.17_88(6), res_17(D)(15)>
  # ivtmp_90 = PHI <ivtmp_91(6), 0(15)>
  vect__4.11_80 = MEM <vector(8) int> [(int *)vectp_x.9_78];
  vect__5.12_82 = vect__4.11_80 * vect_cst__81;
  vect__7.15_85 = MEM <vector(8) int> [(int *)vectp_y.13_83];
  vect__9.16_86 = vect__5.12_82 + vect__7.15_85;
  MEM <vector(8) int> [(int *)vectp_res.17_87] = vect__9.16_86;
  vectp_x.9_79 = vectp_x.9_78 + 32;
  vectp_y.13_84 = vectp_y.13_83 + 32;
  vectp_res.17_88 = vectp_res.17_87 + 32;
  ivtmp_91 = ivtmp_90 + 1;
  if (ivtmp_91 < bnd.6_72)
    goto <bb 6>; [83.33%]
  else
    goto <bb 17>; [16.67%]

  <bb 6> [local count: 378429568]:
  goto <bb 3>; [100.00%]

  <bb 17> [local count: 75685914]:
  niters_vector_mult_vf.7_73 = bnd.6_72 << 3;
  _77 = niters_vector_mult_vf.7_73;
  tmp.8_74 = (int) niters_vector_mult_vf.7_73;
  if (niters.5_53 == niters_vector_mult_vf.7_73)
    goto <bb 21>; [12.50%]
  else
    goto <bb 20>; [87.50%]

  <bb 20> [local count: 74634721]:
  # i_70 = PHI <tmp.8_74(17), 0(12)>
  # _76 = PHI <_77(17), 0(12)>
  _94 = (unsigned int) size_13(D);
  niters.19_93 = _94 - _76;
  _109 = (unsigned int) size_13(D);
  _110 = _109 - _76;
  _111 = _110 + 4294967295;
  if (_111 <= 2)
    goto <bb 29>; [10.00%]
  else
    goto <bb 24>; [90.00%]

  <bb 24> [local count: 134342497]:
  bnd.20_114 = niters.19_93 >> 2;
  _120 = (sizetype) _76;
  _121 = _120 * 4;
  vectp_x.24_119 = x_14(D) + _121;
  vect_cst__125 = {a_15(D), a_15(D), a_15(D), a_15(D)};
  _128 = (sizetype) _76;
  _129 = _128 * 4;
  vectp_y.28_127 = y_16(D) + _129;
  _135 = (sizetype) _76;
  _136 = _135 * 4;
  vectp_res.32_134 = res_17(D) + _136;
  vect__59.25_124 = MEM <vector(4) int> [(int *)vectp_x.24_119];
  vect__60.26_126 = vect__59.25_124 * vect_cst__125;
  vect__62.29_132 = MEM <vector(4) int> [(int *)vectp_y.28_127];
  vect__64.30_133 = vect__60.26_126 + vect__62.29_132;
  MEM <vector(4) int> [(int *)vectp_res.32_134] = vect__64.30_133;
  vectp_x.23_123 = vectp_x.24_119 + 16;
  vectp_y.27_131 = vectp_y.28_127 + 16;
  vectp_res.31_138 = vectp_res.32_134 + 16;
  ivtmp_141 = 1;
  niters_vector_mult_vf.21_115 = bnd.20_114 << 2;
  _117 = (int) niters_vector_mult_vf.21_115;
  tmp.22_116 = i_70 + _117;
  if (niters.19_93 == niters_vector_mult_vf.21_115)
    goto <bb 30>; [25.00%]
  else
    goto <bb 29>; [75.00%]

  <bb 29> [local count: 57841909]:
  # i_112 = PHI <tmp.22_116(24), i_70(20)>
  _2 = (long unsigned int) i_112;
  _3 = _2 * 4;
  _4 = x_14(D) + _3;
  _5 = *_4;
  _6 = _5 * a_15(D);
  _7 = y_16(D) + _3;
  _8 = *_7;
  _9 = res_17(D) + _3;
  _19 = _6 + _8;
  *_9 = _19;
  i_56 = i_112 + 1;
  if (size_13(D) > i_56)
    goto <bb 34>; [89.00%]
  else
    goto <bb 30>; [11.00%]

  <bb 34> [local count: 51479300]:
  # i_57 = PHI <i_56(29)>
  _59 = (long unsigned int) i_57;
  _60 = _59 * 4;
  _61 = x_14(D) + _60;
  _62 = *_61;
  _63 = _62 * a_15(D);
  _64 = y_16(D) + _60;
  _66 = *_64;
  _67 = res_17(D) + _60;
  _108 = _63 + _66;
  *_67 = _108;
  i_52 = i_57 + 1;
  if (size_13(D) > i_52)
    goto <bb 27>; [89.00%]
  else
    goto <bb 30>; [11.00%]

  <bb 27> [local count: 45816576]:
  # i_95 = PHI <i_52(34)>
  _97 = (long unsigned int) i_95;
  _98 = _97 * 4;
  _99 = x_14(D) + _98;
  _100 = *_99;
  _101 = _100 * a_15(D);
  _102 = y_16(D) + _98;
  _103 = *_102;
  _104 = res_17(D) + _98;
  _105 = _101 + _103;
  *_104 = _105;
  i_107 = i_95 + 1;
  goto <bb 30>; [100.00%]

  <bb 13> [local count: 21023864]:

  <bb 9> [local count: 191126041]:
  # i_39 = PHI <i_51(10), 0(13)>
  _41 = (long unsigned int) i_39;
  _42 = _41 * 4;
  _43 = x_14(D) + _42;
  _44 = *_43;
  _45 = _44 * a_15(D);
  _46 = y_16(D) + _42;
  _47 = *_46;
  _48 = res_17(D) + _42;
  _49 = _45 + _47;
  *_48 = _49;
  i_51 = i_39 + 1;
  if (size_13(D) > i_51)
    goto <bb 10>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 10> [local count: 170102176]:
  goto <bb 9>; [100.00%]

  <bb 30> [local count: 74634721]:

  <bb 21> [local count: 84095460]:

  <bb 8> [local count: 105119324]:

  <bb 4> [local count: 118111600]:
  return;

}



;; Function main (main, funcdef_no=23, decl_uid=3431, cgraph_uid=24, symbol_order=23) (executed once)

Not peeling: upper bound is known so can unroll completely
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 98
Removing basic block 99

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

vectp_y.62_1 -> { vectp_y.62_59 }
vectp_res.66_2 -> { vectp_res.66_81 }
ivtmp_3 -> { ivtmp_84 }
vect__34.60_4 -> { vect__34.60_45 }
vect__35.61_5 -> { vect__35.61_60 }
vectp_x.58_13 -> { vectp_x.58_61 }
.MEM_15 -> { .MEM_83 }
vectp_x.58_26 -> { vectp_x.58_65 }
ivtmp_27 -> { ivtmp_84 }
vectp_res.66_28 -> { vectp_res.66_81 }
vect__37.64_29 -> { vect__37.64_79 }
.MEM_30 -> { .MEM_57 }
vect__39.65_31 -> { vect__39.65_80 }
.MEM_32 -> { .MEM_83 }
vectp_x.58_33 -> { vectp_x.58_61 }
vectp_y.62_34 -> { vectp_y.62_58 }
vectp_res.66_35 -> { vectp_res.66_82 }
ivtmp_36 -> { ivtmp_85 }
.MEM_37 -> { .MEM_57 }
vectp_x.58_38 -> { vectp_x.58_65 }
vectp_y.62_39 -> { vectp_y.62_59 }
vectp_res.66_40 -> { vectp_res.66_81 }
ivtmp_41 -> { ivtmp_85 }
vect__35.61_42 -> { vect__35.61_60 }
vectp_res.66_44 -> { vectp_res.66_82 }
vectp_y.62_46 -> { vectp_y.62_58 }
vectp_x.58_47 -> { vectp_x.58_61 }
.MEM_48 -> { .MEM_83 }
vect__39.65_49 -> { vect__39.65_80 }
vect__35.61_50 -> { vect__35.61_60 }
vectp_x.58_52 -> { vectp_x.58_65 }
vect__35.61_53 -> { vect__35.61_60 }
vect__37.64_56 -> { vect__37.64_79 }
vect__34.60_63 -> { vect__34.60_45 }
vectp_res.66_64 -> { vectp_res.66_81 }
vect__34.60_66 -> { vect__34.60_45 }
ivtmp_67 -> { ivtmp_84 }
vectp_y.62_68 -> { vectp_y.62_59 }
vect__37.64_70 -> { vect__37.64_79 }
vect__34.60_71 -> { vect__34.60_45 }
vectp_res.66_72 -> { vectp_res.66_82 }
vect__39.65_73 -> { vect__39.65_80 }
.MEM_74 -> { .MEM_57 }
ivtmp_75 -> { ivtmp_84 }
vect__35.61_76 -> { vect__35.61_60 }
vectp_y.62_78 -> { vectp_y.62_58 }
.MEM_103 -> { .MEM_57 }
ivtmp_104 -> { ivtmp_85 }
vect__39.65_105 -> { vect__39.65_80 }
vect__37.64_106 -> { vect__37.64_79 }
vect__34.60_107 -> { vect__34.60_45 }
vectp_y.62_108 -> { vectp_y.62_58 }
vectp_x.58_110 -> { vectp_x.58_61 }
vectp_res.66_111 -> { vectp_res.66_82 }
ivtmp_112 -> { ivtmp_85 }
.MEM_113 -> { .MEM_57 }
vectp_x.58_114 -> { vectp_x.58_65 }
vectp_y.62_115 -> { vectp_y.62_59 }
vectp_y.62_116 -> { vectp_y.62_59 }
vectp_x.58_117 -> { vectp_x.58_65 }
vectp_res.66_118 -> { vectp_res.66_81 }
ivtmp_119 -> { ivtmp_84 }
.MEM_120 -> { .MEM_83 }
vect__37.64_149 -> { vect__37.64_79 }
vect__39.65_150 -> { vect__39.65_80 }
.MEM_151 -> { .MEM_83 }
vectp_x.58_152 -> { vectp_x.58_61 }
vectp_y.62_153 -> { vectp_y.62_58 }
vectp_res.66_154 -> { vectp_res.66_82 }
ivtmp_155 -> { ivtmp_85 }
.MEM_156 -> { .MEM_57 }
vectp_x.58_157 -> { vectp_x.58_65 }
vectp_y.62_158 -> { vectp_y.62_59 }
vectp_res.66_159 -> { vectp_res.66_81 }
ivtmp_160 -> { ivtmp_84 }
vect__34.60_161 -> { vect__34.60_45 }
vect__35.61_162 -> { vect__35.61_60 }
vect__37.64_163 -> { vect__37.64_79 }
vect__39.65_164 -> { vect__39.65_80 }
.MEM_165 -> { .MEM_83 }
vectp_x.58_166 -> { vectp_x.58_61 }
vectp_y.62_167 -> { vectp_y.62_58 }
vectp_res.66_168 -> { vectp_res.66_82 }
ivtmp_169 -> { ivtmp_85 }
.MEM_170 -> { .MEM_57 }
vectp_x.58_171 -> { vectp_x.58_65 }
vectp_y.62_172 -> { vectp_y.62_59 }
vectp_res.66_173 -> { vectp_res.66_81 }
ivtmp_174 -> { ivtmp_84 }
vect__34.60_175 -> { vect__34.60_45 }
vect__35.61_176 -> { vect__35.61_60 }
vect__37.64_177 -> { vect__37.64_79 }
vect__39.65_178 -> { vect__39.65_80 }
.MEM_179 -> { .MEM_83 }
vectp_x.58_180 -> { vectp_x.58_61 }
vectp_y.62_181 -> { vectp_y.62_58 }
vectp_res.66_182 -> { vectp_res.66_82 }
ivtmp_183 -> { ivtmp_85 }
.MEM_184 -> { .MEM_57 }
vectp_x.58_185 -> { vectp_x.58_65 }
vectp_y.62_186 -> { vectp_y.62_59 }
vectp_res.66_187 -> { vectp_res.66_81 }
ivtmp_188 -> { ivtmp_84 }
vect__34.60_189 -> { vect__34.60_45 }
vect__35.61_190 -> { vect__35.61_60 }
vect__37.64_191 -> { vect__37.64_79 }
vect__39.65_192 -> { vect__39.65_80 }
.MEM_193 -> { .MEM_83 }
vectp_x.58_194 -> { vectp_x.58_61 }
vectp_y.62_195 -> { vectp_y.62_58 }
vectp_res.66_196 -> { vectp_res.66_82 }
ivtmp_197 -> { ivtmp_85 }
.MEM_198 -> { .MEM_57 }
vectp_x.58_199 -> { vectp_x.58_65 }
vectp_y.62_200 -> { vectp_y.62_59 }
vectp_res.66_201 -> { vectp_res.66_81 }
ivtmp_202 -> { ivtmp_84 }
vect__34.60_203 -> { vect__34.60_45 }
vect__35.61_204 -> { vect__35.61_60 }
vect__37.64_205 -> { vect__37.64_79 }
vect__39.65_206 -> { vect__39.65_80 }
.MEM_207 -> { .MEM_83 }
vectp_x.58_208 -> { vectp_x.58_61 }
vectp_y.62_209 -> { vectp_y.62_58 }
vectp_res.66_210 -> { vectp_res.66_82 }
ivtmp_211 -> { ivtmp_85 }
.MEM_212 -> { .MEM_57 }
vectp_x.58_213 -> { vectp_x.58_65 }
vectp_y.62_214 -> { vectp_y.62_59 }
vectp_res.66_215 -> { vectp_res.66_81 }
ivtmp_216 -> { ivtmp_84 }
vect__34.60_217 -> { vect__34.60_45 }
vect__35.61_218 -> { vect__35.61_60 }
vect__37.64_219 -> { vect__37.64_79 }
vect__39.65_220 -> { vect__39.65_80 }
.MEM_221 -> { .MEM_83 }
vectp_x.58_222 -> { vectp_x.58_61 }
vectp_y.62_223 -> { vectp_y.62_58 }
vectp_res.66_224 -> { vectp_res.66_82 }
ivtmp_225 -> { ivtmp_85 }
.MEM_226 -> { .MEM_57 }
vectp_x.58_227 -> { vectp_x.58_65 }
vectp_y.62_228 -> { vectp_y.62_59 }
vectp_res.66_229 -> { vectp_res.66_81 }
ivtmp_230 -> { ivtmp_84 }
vect__34.60_231 -> { vect__34.60_45 }
vect__35.61_232 -> { vect__35.61_60 }
vect__37.64_233 -> { vect__37.64_79 }
vect__39.65_234 -> { vect__39.65_80 }
.MEM_235 -> { .MEM_83 }
vectp_x.58_236 -> { vectp_x.58_61 }
vectp_y.62_237 -> { vectp_y.62_58 }
vectp_res.66_238 -> { vectp_res.66_82 }
ivtmp_239 -> { ivtmp_85 }
.MEM_240 -> { .MEM_54 }
vect_vec_iv_.80_241 -> { vect_vec_iv_.80_122 }
vectp_x.82_242 -> { vectp_x.82_126 }
vectp_y.84_243 -> { vectp_y.84_129 }
ivtmp_244 -> { ivtmp_132 }
_245 -> { _123 }
vect__4.81_246 -> { vect__4.81_125 }
.MEM_247 -> { .MEM_128 }
.MEM_248 -> { .MEM_131 }
vectp_x.82_249 -> { vectp_x.82_127 }
vectp_y.84_250 -> { vectp_y.84_130 }
ivtmp_251 -> { ivtmp_133 }
.MEM_252 -> { .MEM_54 }
vect_vec_iv_.80_253 -> { vect_vec_iv_.80_122 }
vectp_x.82_254 -> { vectp_x.82_126 }
vectp_y.84_255 -> { vectp_y.84_129 }
ivtmp_256 -> { ivtmp_132 }
_257 -> { _123 }
vect__4.81_258 -> { vect__4.81_125 }
.MEM_259 -> { .MEM_128 }
.MEM_260 -> { .MEM_131 }
vectp_x.82_261 -> { vectp_x.82_127 }
vectp_y.84_262 -> { vectp_y.84_130 }
ivtmp_263 -> { ivtmp_133 }
.MEM_264 -> { .MEM_54 }
vect_vec_iv_.80_265 -> { vect_vec_iv_.80_122 }
vectp_x.82_266 -> { vectp_x.82_126 }
vectp_y.84_267 -> { vectp_y.84_129 }
ivtmp_268 -> { ivtmp_132 }
_269 -> { _123 }
vect__4.81_270 -> { vect__4.81_125 }
.MEM_271 -> { .MEM_128 }
.MEM_272 -> { .MEM_131 }
vectp_x.82_273 -> { vectp_x.82_127 }
vectp_y.84_274 -> { vectp_y.84_130 }
ivtmp_275 -> { ivtmp_133 }
.MEM_276 -> { .MEM_54 }
vect_vec_iv_.80_277 -> { vect_vec_iv_.80_122 }
vectp_x.82_278 -> { vectp_x.82_126 }
vectp_y.84_279 -> { vectp_y.84_129 }
ivtmp_280 -> { ivtmp_132 }
_281 -> { _123 }
vect__4.81_282 -> { vect__4.81_125 }
.MEM_283 -> { .MEM_128 }
.MEM_284 -> { .MEM_131 }
vectp_x.82_285 -> { vectp_x.82_127 }
vectp_y.84_286 -> { vectp_y.84_130 }
ivtmp_287 -> { ivtmp_133 }
.MEM_288 -> { .MEM_54 }
vect_vec_iv_.80_289 -> { vect_vec_iv_.80_122 }
vectp_x.82_290 -> { vectp_x.82_126 }
vectp_y.84_291 -> { vectp_y.84_129 }
ivtmp_292 -> { ivtmp_132 }
_293 -> { _123 }
vect__4.81_294 -> { vect__4.81_125 }
.MEM_295 -> { .MEM_128 }
.MEM_296 -> { .MEM_131 }
vectp_x.82_297 -> { vectp_x.82_127 }
vectp_y.84_298 -> { vectp_y.84_130 }
ivtmp_299 -> { ivtmp_133 }
.MEM_300 -> { .MEM_54 }
vect_vec_iv_.80_301 -> { vect_vec_iv_.80_122 }
vectp_x.82_302 -> { vectp_x.82_126 }
vectp_y.84_303 -> { vectp_y.84_129 }
ivtmp_304 -> { ivtmp_132 }
_305 -> { _123 }
vect__4.81_306 -> { vect__4.81_125 }
.MEM_307 -> { .MEM_128 }
.MEM_308 -> { .MEM_131 }
vectp_x.82_309 -> { vectp_x.82_127 }
vectp_y.84_310 -> { vectp_y.84_130 }
ivtmp_311 -> { ivtmp_133 }
.MEM_312 -> { .MEM_54 }
vect_vec_iv_.80_313 -> { vect_vec_iv_.80_122 }
vectp_x.82_314 -> { vectp_x.82_126 }
vectp_y.84_315 -> { vectp_y.84_129 }
ivtmp_316 -> { ivtmp_132 }
_317 -> { _123 }
vect__4.81_318 -> { vect__4.81_125 }
.MEM_319 -> { .MEM_128 }
.MEM_320 -> { .MEM_131 }
vectp_x.82_321 -> { vectp_x.82_127 }
vectp_y.84_322 -> { vectp_y.84_130 }
ivtmp_323 -> { ivtmp_133 }
.MEM_324 -> { .MEM_54 }
vect_vec_iv_.80_325 -> { vect_vec_iv_.80_122 }
vectp_x.82_326 -> { vectp_x.82_126 }
vectp_y.84_327 -> { vectp_y.84_129 }
ivtmp_328 -> { ivtmp_132 }
_329 -> { _123 }
vect__4.81_330 -> { vect__4.81_125 }
.MEM_331 -> { .MEM_128 }
.MEM_332 -> { .MEM_131 }
vectp_x.82_333 -> { vectp_x.82_127 }
vectp_y.84_334 -> { vectp_y.84_130 }
ivtmp_335 -> { ivtmp_133 }
.MEM_336 -> { .MEM_54 }
vect_vec_iv_.80_337 -> { vect_vec_iv_.80_122 }
vectp_x.82_338 -> { vectp_x.82_126 }
vectp_y.84_339 -> { vectp_y.84_129 }
ivtmp_340 -> { ivtmp_132 }
_341 -> { _123 }
vect__4.81_342 -> { vect__4.81_125 }
.MEM_343 -> { .MEM_128 }
.MEM_344 -> { .MEM_131 }
vectp_x.82_345 -> { vectp_x.82_127 }
vectp_y.84_346 -> { vectp_y.84_130 }
ivtmp_347 -> { ivtmp_133 }
.MEM_348 -> { .MEM_54 }
vect_vec_iv_.80_349 -> { vect_vec_iv_.80_122 }
vectp_x.82_350 -> { vectp_x.82_126 }
vectp_y.84_351 -> { vectp_y.84_129 }
ivtmp_352 -> { ivtmp_132 }
_353 -> { _123 }
vect__4.81_354 -> { vect__4.81_125 }
.MEM_355 -> { .MEM_128 }
.MEM_356 -> { .MEM_131 }
vectp_x.82_357 -> { vectp_x.82_127 }
vectp_y.84_358 -> { vectp_y.84_130 }
ivtmp_359 -> { ivtmp_133 }
.MEM_360 -> { .MEM_54 }
vect_vec_iv_.80_361 -> { vect_vec_iv_.80_122 }
vectp_x.82_362 -> { vectp_x.82_126 }
vectp_y.84_363 -> { vectp_y.84_129 }
ivtmp_364 -> { ivtmp_132 }
_365 -> { _123 }
vect__4.81_366 -> { vect__4.81_125 }
.MEM_367 -> { .MEM_128 }
.MEM_368 -> { .MEM_131 }
vectp_x.82_369 -> { vectp_x.82_127 }
vectp_y.84_370 -> { vectp_y.84_130 }
ivtmp_371 -> { ivtmp_133 }
Incremental SSA update started at block: 52
Number of blocks in CFG: 100
Number of blocks to update: 50 ( 50%)


Removing basic block 12
Removing basic block 13
Removing basic block 21
Removing basic block 27
Removing basic block 74
Removing basic block 75
Removing basic block 76
Removing basic block 77
Merging blocks 2 and 52
Removing basic block 31
Removing basic block 33
Removing basic block 35
Removing basic block 37
Removing basic block 39
Removing basic block 41
Removing basic block 43
Removing basic block 45
Removing basic block 47
Removing basic block 49
Removing basic block 51
Removing basic block 53
Removing basic block 55
Removing basic block 57
Removing basic block 59
Removing basic block 61
Removing basic block 63
Removing basic block 65
Removing basic block 67
Removing basic block 69
Removing basic block 71
Removing basic block 73
Merging blocks 2 and 54
Merging blocks 2 and 56
Merging blocks 2 and 58
Merging blocks 2 and 60
Merging blocks 2 and 62
Merging blocks 2 and 64
Merging blocks 2 and 66
Merging blocks 2 and 68
Merging blocks 2 and 70
Merging blocks 2 and 72
Merging blocks 2 and 3
Merging blocks 2 and 25
Merging blocks 2 and 26
Merging blocks 2 and 11
Merging blocks 2 and 30
Merging blocks 2 and 32
Merging blocks 2 and 34
Merging blocks 2 and 36
Merging blocks 2 and 38
Merging blocks 2 and 40
Merging blocks 2 and 42
Merging blocks 2 and 44
Merging blocks 2 and 46
Merging blocks 2 and 48
Merging blocks 2 and 50
Merging blocks 2 and 4
Merging blocks 2 and 19
Merging blocks 2 and 20
Merging blocks 2 and 10
Not peeling: upper bound is known so can unroll completely
main (int argc, char * * argv)
{
  vector(4) int * vectp_y.91;
  vector(4) int * vectp_y.90;
  vector(4) int * vectp_x.89;
  vector(4) int * vectp_x.88;
  vector(4) int vect__114.87;
  vector(4) int vect_vec_iv_.86;
  vector(8) int * vectp_y.85;
  vector(8) int * vectp_y.84;
  vector(8) int * vectp_x.83;
  vector(8) int * vectp_x.82;
  vector(8) int vect__4.81;
  vector(8) int vect_vec_iv_.80;
  unsigned int tmp.79;
  int tmp.78;
  vector(4) int * vectp_res.77;
  vector(4) int * vectp_res.76;
  vector(4) int vect__68.75;
  vector(4) int vect__30.74;
  vector(4) int * vectp_y.73;
  vector(4) int * vectp_y.72;
  vector(4) int vect__44.71;
  vector(4) int vect__46.70;
  vector(4) int * vectp_x.69;
  vector(4) int * vectp_x.68;
  vector(8) int * vectp_res.67;
  vector(8) int * vectp_res.66;
  vector(8) int vect__39.65;
  vector(8) int vect__37.64;
  vector(8) int * vectp_y.63;
  vector(8) int * vectp_y.62;
  vector(8) int vect__35.61;
  vector(8) int vect__34.60;
  vector(8) int * vectp_x.59;
  vector(8) int * vectp_x.58;
  unsigned int tmp.57;
  int tmp.56;
  int i;
  int * y;
  int * x;
  int * res;
  int i;
  long unsigned int _6;
  long unsigned int _7;
  int * _8;
  int _9;
  int _10;
  int _11;
  int _14;
  unsigned int ivtmp_36;
  unsigned int ivtmp_41;
  vector(8) int vect_cst__43;
  unsigned int ivtmp_51;
  int _62;
  unsigned int ivtmp_77;
  unsigned int ivtmp_85;
  vector(4) int vect_cst__90;
  unsigned int ivtmp_102;
  unsigned int ivtmp_104;
  unsigned int ivtmp_112;
  vector(8) int vect_cst__121;
  vector(8) int _123;
  vector(8) int vect_cst__124;
  unsigned int ivtmp_133;
  vector(4) int vect_cst__134;
  vector(4) int _136;
  vector(4) int vect_cst__137;
  unsigned int ivtmp_148;
  unsigned int ivtmp_155;
  unsigned int ivtmp_169;
  unsigned int ivtmp_183;
  unsigned int ivtmp_197;
  unsigned int ivtmp_211;
  unsigned int ivtmp_225;
  unsigned int ivtmp_239;
  vector(8) int _245;
  unsigned int ivtmp_251;
  vector(8) int _257;
  unsigned int ivtmp_263;
  vector(8) int _269;
  unsigned int ivtmp_275;
  vector(8) int _281;
  unsigned int ivtmp_287;
  vector(8) int _293;
  unsigned int ivtmp_299;
  vector(8) int _305;
  unsigned int ivtmp_311;
  vector(8) int _317;
  unsigned int ivtmp_323;
  vector(8) int _329;
  unsigned int ivtmp_335;
  vector(8) int _341;
  unsigned int ivtmp_347;
  vector(8) int _353;
  unsigned int ivtmp_359;
  vector(8) int _365;
  unsigned int ivtmp_371;

  <bb 2> [local count: 21474835]:
  res_19 = malloc (400);
  x_21 = malloc (400);
  y_23 = malloc (400);
  vect_cst__121 = { 8, 8, 8, 8, 8, 8, 8, 8 };
  vect_cst__124 = { 50, 50, 50, 50, 50, 50, 50, 50 };
  _245 = vect_cst__121 + { 0, 1, 2, 3, 4, 5, 6, 7 };
  vect__4.81_246 = vect_cst__124 + { 0, 1, 2, 3, 4, 5, 6, 7 };
  MEM <vector(8) int> [(int *)x_21] = vect__4.81_246;
  MEM <vector(8) int> [(int *)y_23] = { 0, 1, 2, 3, 4, 5, 6, 7 };
  vectp_x.82_249 = x_21 + 32;
  vectp_y.84_250 = y_23 + 32;
  ivtmp_251 = 1;
  _257 = vect_cst__121 + _245;
  vect__4.81_258 = vect_cst__124 + _245;
  MEM <vector(8) int> [(int *)vectp_x.82_249] = vect__4.81_258;
  MEM <vector(8) int> [(int *)vectp_y.84_250] = _245;
  vectp_x.82_261 = vectp_x.82_249 + 32;
  vectp_y.84_262 = vectp_y.84_250 + 32;
  ivtmp_263 = ivtmp_251 + 1;
  _269 = vect_cst__121 + _257;
  vect__4.81_270 = vect_cst__124 + _257;
  MEM <vector(8) int> [(int *)vectp_x.82_261] = vect__4.81_270;
  MEM <vector(8) int> [(int *)vectp_y.84_262] = _257;
  vectp_x.82_273 = vectp_x.82_261 + 32;
  vectp_y.84_274 = vectp_y.84_262 + 32;
  ivtmp_275 = ivtmp_263 + 1;
  _281 = vect_cst__121 + _269;
  vect__4.81_282 = vect_cst__124 + _269;
  MEM <vector(8) int> [(int *)vectp_x.82_273] = vect__4.81_282;
  MEM <vector(8) int> [(int *)vectp_y.84_274] = _269;
  vectp_x.82_285 = vectp_x.82_273 + 32;
  vectp_y.84_286 = vectp_y.84_274 + 32;
  ivtmp_287 = ivtmp_275 + 1;
  _293 = vect_cst__121 + _281;
  vect__4.81_294 = vect_cst__124 + _281;
  MEM <vector(8) int> [(int *)vectp_x.82_285] = vect__4.81_294;
  MEM <vector(8) int> [(int *)vectp_y.84_286] = _281;
  vectp_x.82_297 = vectp_x.82_285 + 32;
  vectp_y.84_298 = vectp_y.84_286 + 32;
  ivtmp_299 = ivtmp_287 + 1;
  _305 = vect_cst__121 + _293;
  vect__4.81_306 = vect_cst__124 + _293;
  MEM <vector(8) int> [(int *)vectp_x.82_297] = vect__4.81_306;
  MEM <vector(8) int> [(int *)vectp_y.84_298] = _293;
  vectp_x.82_309 = vectp_x.82_297 + 32;
  vectp_y.84_310 = vectp_y.84_298 + 32;
  ivtmp_311 = ivtmp_299 + 1;
  _317 = vect_cst__121 + _305;
  vect__4.81_318 = vect_cst__124 + _305;
  MEM <vector(8) int> [(int *)vectp_x.82_309] = vect__4.81_318;
  MEM <vector(8) int> [(int *)vectp_y.84_310] = _305;
  vectp_x.82_321 = vectp_x.82_309 + 32;
  vectp_y.84_322 = vectp_y.84_310 + 32;
  ivtmp_323 = ivtmp_311 + 1;
  _329 = vect_cst__121 + _317;
  vect__4.81_330 = vect_cst__124 + _317;
  MEM <vector(8) int> [(int *)vectp_x.82_321] = vect__4.81_330;
  MEM <vector(8) int> [(int *)vectp_y.84_322] = _317;
  vectp_x.82_333 = vectp_x.82_321 + 32;
  vectp_y.84_334 = vectp_y.84_322 + 32;
  ivtmp_335 = ivtmp_323 + 1;
  _341 = vect_cst__121 + _329;
  vect__4.81_342 = vect_cst__124 + _329;
  MEM <vector(8) int> [(int *)vectp_x.82_333] = vect__4.81_342;
  MEM <vector(8) int> [(int *)vectp_y.84_334] = _329;
  vectp_x.82_345 = vectp_x.82_333 + 32;
  vectp_y.84_346 = vectp_y.84_334 + 32;
  ivtmp_347 = ivtmp_335 + 1;
  _353 = vect_cst__121 + _341;
  vect__4.81_354 = vect_cst__124 + _341;
  MEM <vector(8) int> [(int *)vectp_x.82_345] = vect__4.81_354;
  MEM <vector(8) int> [(int *)vectp_y.84_346] = _341;
  vectp_x.82_357 = vectp_x.82_345 + 32;
  vectp_y.84_358 = vectp_y.84_346 + 32;
  ivtmp_359 = ivtmp_347 + 1;
  _365 = vect_cst__121 + _353;
  vect__4.81_366 = vect_cst__124 + _353;
  MEM <vector(8) int> [(int *)vectp_x.82_357] = vect__4.81_366;
  MEM <vector(8) int> [(int *)vectp_y.84_358] = _353;
  vectp_x.82_369 = vectp_x.82_357 + 32;
  vectp_y.84_370 = vectp_y.84_358 + 32;
  ivtmp_371 = ivtmp_359 + 1;
  _123 = vect_cst__121 + _365;
  vect__4.81_125 = vect_cst__124 + _365;
  MEM <vector(8) int> [(int *)vectp_x.82_369] = vect__4.81_125;
  MEM <vector(8) int> [(int *)vectp_y.84_370] = _365;
  vectp_x.82_127 = vectp_x.82_369 + 32;
  vectp_y.84_130 = vectp_y.84_370 + 32;
  ivtmp_133 = ivtmp_371 + 1;
  vect_cst__134 = { 4, 4, 4, 4 };
  vect_cst__137 = { 50, 50, 50, 50 };
  vectp_x.89_139 = x_21 + 384;
  vectp_y.91_143 = y_23 + 384;
  _136 = vect_cst__134 + { 96, 97, 98, 99 };
  vect__114.87_138 = vect_cst__137 + { 96, 97, 98, 99 };
  MEM <vector(4) int> [(int *)vectp_x.89_139] = vect__114.87_138;
  MEM <vector(4) int> [(int *)vectp_y.91_143] = { 96, 97, 98, 99 };
  vectp_x.88_141 = vectp_x.89_139 + 16;
  vectp_y.90_145 = vectp_y.91_143 + 16;
  ivtmp_148 = 1;
  vect_cst__43 = { 2, 2, 2, 2, 2, 2, 2, 2 };
  vect__34.60_4 = MEM <vector(8) int> [(int *)x_21];
  vect__35.61_5 = vect__34.60_4 * vect_cst__43;
  vect__37.64_29 = MEM <vector(8) int> [(int *)y_23];
  vect__39.65_73 = vect__35.61_5 + vect__37.64_29;
  MEM <vector(8) int> [(int *)res_19] = vect__39.65_73;
  vectp_x.58_110 = x_21 + 32;
  vectp_y.62_108 = y_23 + 32;
  vectp_res.66_111 = res_19 + 32;
  ivtmp_112 = 1;
  vect__34.60_107 = MEM <vector(8) int> [(int *)vectp_x.58_110];
  vect__35.61_76 = vect__34.60_107 * vect_cst__43;
  vect__37.64_56 = MEM <vector(8) int> [(int *)vectp_y.62_108];
  vect__39.65_31 = vect__35.61_76 + vect__37.64_56;
  MEM <vector(8) int> [(int *)vectp_res.66_111] = vect__39.65_31;
  vectp_x.58_33 = vectp_x.58_110 + 32;
  vectp_y.62_34 = vectp_y.62_108 + 32;
  vectp_res.66_35 = vectp_res.66_111 + 32;
  ivtmp_36 = ivtmp_112 + 1;
  vect__34.60_66 = MEM <vector(8) int> [(int *)vectp_x.58_33];
  vect__35.61_50 = vect__34.60_66 * vect_cst__43;
  vect__37.64_70 = MEM <vector(8) int> [(int *)vectp_y.62_34];
  vect__39.65_49 = vect__35.61_50 + vect__37.64_70;
  MEM <vector(8) int> [(int *)vectp_res.66_35] = vect__39.65_49;
  vectp_x.58_47 = vectp_x.58_33 + 32;
  vectp_y.62_46 = vectp_y.62_34 + 32;
  vectp_res.66_44 = vectp_res.66_35 + 32;
  ivtmp_41 = ivtmp_36 + 1;
  vect__34.60_71 = MEM <vector(8) int> [(int *)vectp_x.58_47];
  vect__35.61_53 = vect__34.60_71 * vect_cst__43;
  vect__37.64_106 = MEM <vector(8) int> [(int *)vectp_y.62_46];
  vect__39.65_105 = vect__35.61_53 + vect__37.64_106;
  MEM <vector(8) int> [(int *)vectp_res.66_44] = vect__39.65_105;
  vectp_x.58_13 = vectp_x.58_47 + 32;
  vectp_y.62_78 = vectp_y.62_46 + 32;
  vectp_res.66_72 = vectp_res.66_44 + 32;
  ivtmp_104 = ivtmp_41 + 1;
  vect__34.60_63 = MEM <vector(8) int> [(int *)vectp_x.58_13];
  vect__35.61_42 = vect__34.60_63 * vect_cst__43;
  vect__37.64_149 = MEM <vector(8) int> [(int *)vectp_y.62_78];
  vect__39.65_150 = vect__35.61_42 + vect__37.64_149;
  MEM <vector(8) int> [(int *)vectp_res.66_72] = vect__39.65_150;
  vectp_x.58_152 = vectp_x.58_13 + 32;
  vectp_y.62_153 = vectp_y.62_78 + 32;
  vectp_res.66_154 = vectp_res.66_72 + 32;
  ivtmp_155 = ivtmp_104 + 1;
  vect__34.60_161 = MEM <vector(8) int> [(int *)vectp_x.58_152];
  vect__35.61_162 = vect__34.60_161 * vect_cst__43;
  vect__37.64_163 = MEM <vector(8) int> [(int *)vectp_y.62_153];
  vect__39.65_164 = vect__35.61_162 + vect__37.64_163;
  MEM <vector(8) int> [(int *)vectp_res.66_154] = vect__39.65_164;
  vectp_x.58_166 = vectp_x.58_152 + 32;
  vectp_y.62_167 = vectp_y.62_153 + 32;
  vectp_res.66_168 = vectp_res.66_154 + 32;
  ivtmp_169 = ivtmp_155 + 1;
  vect__34.60_175 = MEM <vector(8) int> [(int *)vectp_x.58_166];
  vect__35.61_176 = vect__34.60_175 * vect_cst__43;
  vect__37.64_177 = MEM <vector(8) int> [(int *)vectp_y.62_167];
  vect__39.65_178 = vect__35.61_176 + vect__37.64_177;
  MEM <vector(8) int> [(int *)vectp_res.66_168] = vect__39.65_178;
  vectp_x.58_180 = vectp_x.58_166 + 32;
  vectp_y.62_181 = vectp_y.62_167 + 32;
  vectp_res.66_182 = vectp_res.66_168 + 32;
  ivtmp_183 = ivtmp_169 + 1;
  vect__34.60_189 = MEM <vector(8) int> [(int *)vectp_x.58_180];
  vect__35.61_190 = vect__34.60_189 * vect_cst__43;
  vect__37.64_191 = MEM <vector(8) int> [(int *)vectp_y.62_181];
  vect__39.65_192 = vect__35.61_190 + vect__37.64_191;
  MEM <vector(8) int> [(int *)vectp_res.66_182] = vect__39.65_192;
  vectp_x.58_194 = vectp_x.58_180 + 32;
  vectp_y.62_195 = vectp_y.62_181 + 32;
  vectp_res.66_196 = vectp_res.66_182 + 32;
  ivtmp_197 = ivtmp_183 + 1;
  vect__34.60_203 = MEM <vector(8) int> [(int *)vectp_x.58_194];
  vect__35.61_204 = vect__34.60_203 * vect_cst__43;
  vect__37.64_205 = MEM <vector(8) int> [(int *)vectp_y.62_195];
  vect__39.65_206 = vect__35.61_204 + vect__37.64_205;
  MEM <vector(8) int> [(int *)vectp_res.66_196] = vect__39.65_206;
  vectp_x.58_208 = vectp_x.58_194 + 32;
  vectp_y.62_209 = vectp_y.62_195 + 32;
  vectp_res.66_210 = vectp_res.66_196 + 32;
  ivtmp_211 = ivtmp_197 + 1;
  vect__34.60_217 = MEM <vector(8) int> [(int *)vectp_x.58_208];
  vect__35.61_218 = vect__34.60_217 * vect_cst__43;
  vect__37.64_219 = MEM <vector(8) int> [(int *)vectp_y.62_209];
  vect__39.65_220 = vect__35.61_218 + vect__37.64_219;
  MEM <vector(8) int> [(int *)vectp_res.66_210] = vect__39.65_220;
  vectp_x.58_222 = vectp_x.58_208 + 32;
  vectp_y.62_223 = vectp_y.62_209 + 32;
  vectp_res.66_224 = vectp_res.66_210 + 32;
  ivtmp_225 = ivtmp_211 + 1;
  vect__34.60_231 = MEM <vector(8) int> [(int *)vectp_x.58_222];
  vect__35.61_232 = vect__34.60_231 * vect_cst__43;
  vect__37.64_233 = MEM <vector(8) int> [(int *)vectp_y.62_223];
  vect__39.65_234 = vect__35.61_232 + vect__37.64_233;
  MEM <vector(8) int> [(int *)vectp_res.66_224] = vect__39.65_234;
  vectp_x.58_236 = vectp_x.58_222 + 32;
  vectp_y.62_237 = vectp_y.62_223 + 32;
  vectp_res.66_238 = vectp_res.66_224 + 32;
  ivtmp_239 = ivtmp_225 + 1;
  vect__34.60_45 = MEM <vector(8) int> [(int *)vectp_x.58_236];
  vect__35.61_60 = vect__34.60_45 * vect_cst__43;
  vect__37.64_79 = MEM <vector(8) int> [(int *)vectp_y.62_237];
  vect__39.65_80 = vect__35.61_60 + vect__37.64_79;
  MEM <vector(8) int> [(int *)vectp_res.66_238] = vect__39.65_80;
  vectp_x.58_61 = vectp_x.58_236 + 32;
  vectp_y.62_58 = vectp_y.62_237 + 32;
  vectp_res.66_82 = vectp_res.66_238 + 32;
  ivtmp_85 = ivtmp_239 + 1;
  vectp_x.69_86 = x_21 + 384;
  vect_cst__90 = { 2, 2, 2, 2 };
  vectp_y.73_92 = y_23 + 384;
  vectp_res.77_97 = res_19 + 384;
  vect__46.70_89 = MEM <vector(4) int> [(int *)vectp_x.69_86];
  vect__44.71_91 = vect__46.70_89 * vect_cst__90;
  vect__30.74_95 = MEM <vector(4) int> [(int *)vectp_y.73_92];
  vect__68.75_96 = vect__44.71_91 + vect__30.74_95;
  MEM <vector(4) int> [(int *)vectp_res.77_97] = vect__68.75_96;
  vectp_x.68_88 = vectp_x.69_86 + 16;
  vectp_y.72_94 = vectp_y.73_92 + 16;
  vectp_res.76_99 = vectp_res.77_97 + 16;
  ivtmp_102 = 1;
  _14 = *res_19;
  printf ("res[%d] = %d ; ", 0, _14);

  <bb 5> [local count: 1052266993]:
  # _62 = PHI <1(2), _10(17)>
  # ivtmp_51 = PHI <99(2), ivtmp_77(17)>
  _6 = (long unsigned int) _62;
  _7 = _6 * 4;
  _8 = res_19 + _7;
  _9 = *_8;
  printf ("res[%d] = %d ; ", _62, _9);
  _10 = _62 + 1;
  _11 = _10 % 10;
  if (_11 == 0)
    goto <bb 6>; [33.34%]
  else
    goto <bb 7>; [66.66%]

  <bb 6> [local count: 350791453]:
  __builtin_putchar (10);

  <bb 7> [local count: 1052266993]:
  ivtmp_77 = ivtmp_51 + 4294967295;
  if (ivtmp_77 != 0)
    goto <bb 17>; [98.99%]
  else
    goto <bb 9>; [1.01%]

  <bb 17> [local count: 1041638038]:
  goto <bb 5>; [100.00%]

  <bb 9> [local count: 10737416]:
  return 1;

}


