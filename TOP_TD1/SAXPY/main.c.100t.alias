
;; Function saxpy (saxpy, funcdef_no=22, decl_uid=3423, cgraph_uid=23, symbol_order=22)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
res = &NONLOCAL
x = &NONLOCAL
y = &NONLOCAL
a = &NONLOCAL
size = &NONLOCAL
_1 = i_10
_2 = _1 + UNKNOWN
_2 = &NONLOCAL
_3 = x + UNKNOWN
_4 = *_3
_5 = _4 + UNKNOWN
_5 = a + UNKNOWN
_6 = y + UNKNOWN
_7 = *_6
_8 = res + UNKNOWN
_9 = _5 + UNKNOWN
_9 = _7 + UNKNOWN
*_8 = _9
i_19 = i_10 + UNKNOWN
i_19 = &NONLOCAL
i_10 = &NULL
i_10 = i_19

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
res = { NONLOCAL }
x = { NONLOCAL } same as res
y = { NONLOCAL } same as res
a = { NONLOCAL } same as res
size = { NONLOCAL } same as res
_1 = { NULL NONLOCAL }
i_10 = { NULL NONLOCAL } same as _1
_2 = { NULL NONLOCAL }
_3 = { NONLOCAL }
_4 = { ESCAPED NONLOCAL }
_5 = { ESCAPED NONLOCAL }
_6 = { NONLOCAL }
_7 = { ESCAPED NONLOCAL }
_8 = { NONLOCAL }
_9 = { ESCAPED NONLOCAL }
i_19 = { NULL NONLOCAL }


Alias information for saxpy

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { }

Flow-insensitive points-to information

_3, points-to non-local, points-to NULL, points-to vars: { }
_6, points-to non-local, points-to NULL, points-to vars: { }
_8, points-to non-local, points-to NULL, points-to vars: { }
x_14(D), points-to non-local, points-to NULL, points-to vars: { }
y_16(D), points-to non-local, points-to NULL, points-to vars: { }
res_17(D), points-to non-local, points-to NULL, points-to vars: { }

saxpy (int * res, int * x, int * y, int a, int size)
{
  int i;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  int _5;
  int * _6;
  int _7;
  int * _8;
  int _9;

  <bb 2> [local count: 118111600]:
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 955630225]:
  _1 = (long unsigned int) i_10;
  _2 = _1 * 4;
  _3 = x_14(D) + _2;
  _4 = *_3;
  _5 = _4 * a_15(D);
  _6 = y_16(D) + _2;
  _7 = *_6;
  _8 = res_17(D) + _2;
  _9 = _5 + _7;
  *_8 = _9;
  i_19 = i_10 + 1;

  <bb 4> [local count: 1073741824]:
  # i_10 = PHI <0(2), i_19(3)>
  if (i_10 < size_13(D))
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 118111600]:
  return;

}



;; Function main (main, funcdef_no=23, decl_uid=3431, cgraph_uid=24, symbol_order=23) (executed once)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
argc = &NONLOCAL
argv = &NONLOCAL
ESCAPED = &NONLOCAL
res_19 = &HEAP(12)
ESCAPED = &NONLOCAL
x_21 = &HEAP(14)
ESCAPED = &NONLOCAL
y_23 = &HEAP(16)
_1 = i_12
_2 = _1 + UNKNOWN
_2 = &NONLOCAL
_3 = x_21 + UNKNOWN
_4 = i_12 + UNKNOWN
_4 = &NONLOCAL
*_3 = _4
_5 = y_23 + UNKNOWN
*_5 = i_12
i_29 = i_12 + UNKNOWN
i_29 = &NONLOCAL
i_12 = &NULL
i_12 = i_29
_31 = i_30
_32 = _31 + UNKNOWN
_32 = &NONLOCAL
_33 = x_21 + UNKNOWN
_34 = *_33
_35 = _34 + UNKNOWN
_35 = &NONLOCAL
_36 = y_23 + UNKNOWN
_37 = *_36
_38 = res_19 + UNKNOWN
_39 = _35 + UNKNOWN
_39 = _37 + UNKNOWN
*_38 = _39
i_40 = i_30 + UNKNOWN
i_40 = &NONLOCAL
i_30 = i_40
i_30 = &NULL
_6 = i_13
_7 = _6 + UNKNOWN
_7 = &NONLOCAL
_8 = res_19 + UNKNOWN
_9 = *_8
ESCAPED = &STRING
ESCAPED = i_13
ESCAPED = _9
_10 = i_13 + UNKNOWN
_10 = &NONLOCAL
_11 = _10 + UNKNOWN
ESCAPED = &NONLOCAL
i_13 = _10
i_13 = &NULL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
argc = { NONLOCAL }
argv = { NONLOCAL } same as argc
malloc = { }
HEAP(12) = { NULL NONLOCAL }
HEAP(14) = { NULL NONLOCAL }
HEAP(16) = { NULL NONLOCAL }
printf = { }
putchar = { }
main = { }
res_19 = { HEAP(12) }
x_21 = { HEAP(14) }
y_23 = { HEAP(16) }
_1 = { NULL NONLOCAL }
i_12 = { NULL NONLOCAL } same as _1
_2 = { NULL NONLOCAL }
_3 = { HEAP(14) }
_4 = { NULL NONLOCAL }
_5 = { HEAP(16) }
i_29 = { NULL NONLOCAL }
_31 = { NULL NONLOCAL }
i_30 = { NULL NONLOCAL } same as _31
_32 = { NULL NONLOCAL }
_33 = { HEAP(14) }
_34 = { NULL NONLOCAL }
_35 = { NULL NONLOCAL }
_36 = { HEAP(16) }
_37 = { NULL NONLOCAL }
_38 = { HEAP(12) }
_39 = { NULL NONLOCAL }
i_40 = { NULL NONLOCAL }
_6 = { NULL NONLOCAL }
i_13 = { NULL NONLOCAL } same as _6
_7 = { NULL NONLOCAL }
_8 = { HEAP(12) }
_9 = { NULL NONLOCAL }
_10 = { NULL NONLOCAL }
_11 = { NULL NONLOCAL }


Alias information for main

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_3, points-to NULL, points-to vars: { D.3515 }
_5, points-to NULL, points-to vars: { D.3516 }
_8, points-to NULL, points-to vars: { D.3514 }
res_19, points-to NULL, points-to vars: { D.3514 }
x_21, points-to NULL, points-to vars: { D.3515 }
y_23, points-to NULL, points-to vars: { D.3516 }
_33, points-to NULL, points-to vars: { D.3515 }
_36, points-to NULL, points-to vars: { D.3516 }
_38, points-to NULL, points-to vars: { D.3514 }

main (int argc, char * * argv)
{
  int i;
  int * y;
  int * x;
  int * res;
  int i;
  long unsigned int _1;
  long unsigned int _2;
  int * _3;
  int _4;
  int * _5;
  long unsigned int _6;
  long unsigned int _7;
  int * _8;
  int _9;
  int _10;
  int _11;
  long unsigned int _31;
  long unsigned int _32;
  int * _33;
  int _34;
  int _35;
  int * _36;
  int _37;
  int * _38;
  int _39;

  <bb 2> [local count: 10737416]:
  res_19 = malloc (400);
  x_21 = malloc (400);
  y_23 = malloc (400);
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 1063004409]:
  _1 = (long unsigned int) i_12;
  _2 = _1 * 4;
  _3 = x_21 + _2;
  _4 = i_12 + 50;
  *_3 = _4;
  _5 = y_23 + _2;
  *_5 = i_12;
  i_29 = i_12 + 1;

  <bb 4> [local count: 1073741824]:
  # i_12 = PHI <0(2), i_29(3)>
  if (i_12 != 100)
    goto <bb 3>; [99.00%]
  else
    goto <bb 14>; [1.00%]

  <bb 14> [local count: 10737416]:
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 86875457]:
  _31 = (long unsigned int) i_30;
  _32 = _31 * 4;
  _33 = x_21 + _32;
  _34 = *_33;
  _35 = _34 * 2;
  _36 = y_23 + _32;
  _37 = *_36;
  _38 = res_19 + _32;
  _39 = _35 + _37;
  *_38 = _39;
  i_40 = i_30 + 1;

  <bb 6> [local count: 97612873]:
  # i_30 = PHI <i_40(5), 0(14)>
  if (i_30 != 100)
    goto <bb 5>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 10737416]:
  goto <bb 12>; [100.00%]

  <bb 7> [local count: 1063004409]:
  _6 = (long unsigned int) i_13;
  _7 = _6 * 4;
  _8 = res_19 + _7;
  _9 = *_8;
  printf ("res[%d] = %d ; ", i_13, _9);
  _10 = i_13 + 1;
  _11 = _10 % 10;
  if (_11 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 8> [local count: 350791453]:
  __builtin_putchar (10);

  <bb 10> [local count: 1063004409]:

  <bb 12> [local count: 1073741824]:
  # i_13 = PHI <_10(10), 0(13)>
  if (i_13 != 100)
    goto <bb 7>; [99.00%]
  else
    goto <bb 11>; [1.00%]

  <bb 11> [local count: 10737416]:
  return 1;

}


